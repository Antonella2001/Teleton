// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositorio;

namespace Repositorio.Migrations
{
    [DbContext(typeof(MiAppContext))]
    [Migration("20220920204654_ultimaDataBase")]
    partial class ultimaDataBase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dominio.Alcancia", b =>
                {
                    b.Property<string>("IdAlcancia")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("AlcanciaId");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Estado");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaAlta");

                    b.Property<string>("Habilitada")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("EsHabilitada");

                    b.HasKey("IdAlcancia");

                    b.ToTable("Alcancias");
                });

            modelBuilder.Entity("Dominio.Campania", b =>
                {
                    b.Property<int>("IdCampania")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CampaniaId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaFinFB")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaFinFB");

                    b.Property<DateTime>("FechaFinMVD")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaFinMVD");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaInicio");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nombre");

                    b.HasKey("IdCampania");

                    b.ToTable("Campanias");
                });

            modelBuilder.Entity("Dominio.Colaborador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ColaboradorId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Departamento")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Departamento");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Direccion");

                    b.Property<string>("Localidad")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Localidad");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Nombre");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("RazonSocial");

                    b.Property<int>("TipoColId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoColId");

                    b.ToTable("Colaboradores");
                });

            modelBuilder.Entity("Dominio.Comentario", b =>
                {
                    b.Property<int>("IdComentario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ComentarioId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2")
                        .HasColumnName("Fecha");

                    b.Property<int>("SolicitudId")
                        .HasColumnType("int")
                        .HasColumnName("SolicitudId");

                    b.Property<string>("TextoComentario")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Texto");

                    b.HasKey("IdComentario");

                    b.HasIndex("SolicitudId");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("Dominio.EntidadesDeNegocio.AlcanciaExterna", b =>
                {
                    b.Property<int>("IdAlcExt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AlcExtId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CampaniaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaDevolucion")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaDevolucion");

                    b.Property<string>("Impreso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MontoDolares")
                        .HasColumnType("int");

                    b.Property<int>("MontoPesos")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nombre");

                    b.Property<int>("NumeroTicket")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Telefono");

                    b.HasKey("IdAlcExt");

                    b.HasIndex("CampaniaId");

                    b.ToTable("AlcanciasExternas");
                });

            modelBuilder.Entity("Dominio.EntidadesDeNegocio.AlcanciaSolicitud", b =>
                {
                    b.Property<string>("IdAlcancia")
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("IdSolicitud")
                        .HasColumnType("int");

                    b.Property<bool>("EsVacia")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime2");

                    b.Property<string>("Impreso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MontoDolares")
                        .HasColumnType("int");

                    b.Property<int>("MontoPesos")
                        .HasColumnType("int");

                    b.Property<int>("NumeroTicket")
                        .HasColumnType("int");

                    b.HasKey("IdAlcancia", "IdSolicitud");

                    b.HasIndex("IdSolicitud");

                    b.ToTable("AlcanciaSolicitudes");
                });

            modelBuilder.Entity("Dominio.EntidadesDeNegocio.Voluntario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VoluntarioId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Cedula");

                    b.Property<DateTime>("Fin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Voluntarios");
                });

            modelBuilder.Entity("Dominio.Responsable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ResponsableId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Cedula");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Correo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Nombre");

                    b.Property<bool>("Retira")
                        .HasColumnType("bit")
                        .HasColumnName("Retira");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Telefono");

                    b.HasKey("Id");

                    b.ToTable("Responsables");
                });

            modelBuilder.Entity("Dominio.Retira", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RetiraId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Cedula");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Nombre");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Telefono");

                    b.HasKey("Id");

                    b.ToTable("Retiran");
                });

            modelBuilder.Entity("Dominio.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RolId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Dominio.Semaforo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SemaforoId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantAlcanciasDevueltas")
                        .HasColumnType("int")
                        .HasColumnName("CantAlcanciasDevueltas");

                    b.Property<int>("CantAlcanciasSinDevolver")
                        .HasColumnType("int")
                        .HasColumnName("CantAlcanciasSinDevolver");

                    b.Property<int>("ColaboradorId")
                        .HasColumnType("int")
                        .HasColumnName("ColaboradorId");

                    b.Property<int>("TotalCampanias")
                        .HasColumnType("int")
                        .HasColumnName("TotalCampanias");

                    b.HasKey("Id");

                    b.HasIndex("ColaboradorId");

                    b.ToTable("Semaforos");
                });

            modelBuilder.Entity("Dominio.Solicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SolicitudId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CampaniaId")
                        .HasColumnType("int");

                    b.Property<int>("CantDevueltas")
                        .HasColumnType("int");

                    b.Property<int>("CantEntregadas")
                        .HasColumnType("int");

                    b.Property<int>("CantSolicitadas")
                        .HasColumnType("int");

                    b.Property<int>("ColaboradorId")
                        .HasColumnType("int");

                    b.Property<string>("LugarEntrega")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResponsableId")
                        .HasColumnType("int");

                    b.Property<int>("RetiraId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaniaId");

                    b.HasIndex("ColaboradorId");

                    b.HasIndex("ResponsableId");

                    b.HasIndex("RetiraId");

                    b.ToTable("Solicitud");
                });

            modelBuilder.Entity("Dominio.TipoColaborador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TipoId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.ToTable("TipoColaboradores");
                });

            modelBuilder.Entity("Dominio.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UsuarioId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contrasenia")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Contrasenia");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Nombre");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Dominio.Colaborador", b =>
                {
                    b.HasOne("Dominio.TipoColaborador", "TipoCol")
                        .WithMany()
                        .HasForeignKey("TipoColId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoCol");
                });

            modelBuilder.Entity("Dominio.Comentario", b =>
                {
                    b.HasOne("Dominio.Solicitud", "Solicitud")
                        .WithMany()
                        .HasForeignKey("SolicitudId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("Dominio.EntidadesDeNegocio.AlcanciaExterna", b =>
                {
                    b.HasOne("Dominio.Campania", "Campania")
                        .WithMany()
                        .HasForeignKey("CampaniaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campania");
                });

            modelBuilder.Entity("Dominio.EntidadesDeNegocio.AlcanciaSolicitud", b =>
                {
                    b.HasOne("Dominio.Alcancia", "Alcancia")
                        .WithMany("AlcanciasSolicitudes")
                        .HasForeignKey("IdAlcancia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Solicitud", "Solicitud")
                        .WithMany("AlcanciasSolicitudes")
                        .HasForeignKey("IdSolicitud")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alcancia");

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("Dominio.Semaforo", b =>
                {
                    b.HasOne("Dominio.Colaborador", "Colaborador")
                        .WithMany()
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaborador");
                });

            modelBuilder.Entity("Dominio.Solicitud", b =>
                {
                    b.HasOne("Dominio.Campania", "Campania")
                        .WithMany("SolicitudesCampania")
                        .HasForeignKey("CampaniaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Colaborador", "Colaborador")
                        .WithMany()
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Responsable", "Responsable")
                        .WithMany()
                        .HasForeignKey("ResponsableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Retira", "Retira")
                        .WithMany()
                        .HasForeignKey("RetiraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campania");

                    b.Navigation("Colaborador");

                    b.Navigation("Responsable");

                    b.Navigation("Retira");
                });

            modelBuilder.Entity("Dominio.Usuario", b =>
                {
                    b.HasOne("Dominio.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Dominio.Alcancia", b =>
                {
                    b.Navigation("AlcanciasSolicitudes");
                });

            modelBuilder.Entity("Dominio.Campania", b =>
                {
                    b.Navigation("SolicitudesCampania");
                });

            modelBuilder.Entity("Dominio.Solicitud", b =>
                {
                    b.Navigation("AlcanciasSolicitudes");
                });
#pragma warning restore 612, 618
        }
    }
}
